Last login: Sat Aug  2 23:06:01 on ttys002You have new mail.The default interactive shell is now zsh.To update your account to use zsh, please run `chsh -s /bin/zsh`.For more details, please visit https://support.apple.com/kb/HT208050.192:~ Alex$ /Library/PostgreSQL/17/scripts/runpsql.sh; exitServer [localhost]: Database [postgres]: Port [5432]: Username [postgres]: Password for user postgres: psql (17.5)Type "help" for help.postgres=# create database employee;ERROR:  database "employee" already existspostgres=# create database employees;CREATE DATABASEpostgres=# \c employees;You are now connected to database "employees" as user "postgres".employees=# -- Create the DEPARTMENTS table firstemployees=# CREATE TABLE DEPARTMENTS (employees(#     department_id INT PRIMARY KEY,employees(#     department_name VARCHAR(100)employees(# );CREATE TABLEemployees=# employees=# -- Now create the EMPLOYEE table with a foreign key referencing DEPARTMENTSemployees=# CREATE TABLE EMPLOYEE (employees(#     employee_id INT PRIMARY KEY,employees(#     first_name VARCHAR(50),employees(#     last_name VARCHAR(50),employees(#     email VARCHAR(100),employees(#     hire_date DATE,employees(#     salary DECIMAL(10, 2),employees(#     department_id INT,employees(#     FOREIGN KEY (department_id) REFERENCES DEPARTMENTS(department_id)employees(# );CREATE TABLEemployees=# -- Create the PROJECTS tableemployees=# CREATE TABLE PROJECTS (employees(#     project_id INT PRIMARY KEY,employees(#     project_name VARCHAR(100),employees(#     start_date DATE,employees(#     end_date DATEemployees(# );CREATE TABLEemployees=# employees=# -- Create the EMPLOYEE_PROJECTS table with composite primary key and foreign keysemployees=# CREATE TABLE EMPLOYEE_PROJECTS (employees(#     employee_id INT,employees(#     project_id INT,employees(#     assigned_date DATE,employees(#     PRIMARY KEY (employee_id, project_id),employees(#     FOREIGN KEY (employee_id) REFERENCES EMPLOYEE(employee_id),employees(#     FOREIGN KEY (project_id) REFERENCES PROJECTS(project_id)employees(# );CREATE TABLEemployees=# \d               List of relations Schema |       Name        | Type  |  Owner   --------+-------------------+-------+---------- public | departments       | table | postgres public | employee          | table | postgres public | employee_projects | table | postgres public | projects          | table | postgres(4 rows)employees=# INSERT INTO departments (department_id, department_name) VALUESemployees-# (1, 'Human Resources'),employees-# (2, 'Finance'),employees-# (3, 'Information Technology'),employees-# (4, 'Marketing'),employees-# (5, 'Legal'),employees-# (6, 'Operations'),employees-# (7, 'Customer Service'),employees-# (8, 'Sales'),employees-# (9, 'Research and Development'),employees-# (10, 'Procurement');INSERT 0 10employees=# INSERT INTO employees (employee_id, first_name, last_name, email, hire_date, salary,employees(# department_id) VALUESemployees-# (101, 'Alice', 'Johnson', 'alice.johnson@company.com', '2015-03-15', 4500.00, 1),employees-# (102, 'Bob', 'Smith', 'bob.smith@company.com', '2018-06-23', 5200.00, 3),employees-# (103, 'Carol', 'Adams', 'carol.adams@company.com', '2012-09-10', 6700.00, 2),employees-# (104, 'David', 'Lee', 'david.lee@company.com', '2020-01-05', 3800.00, 4),employees-# (105, 'Eve', 'Martins', 'eve.martins@company.com', '2019-12-11', 4000.00, 3),employees-# (106, 'Frank', 'Green', 'frank.green@company.com', '2017-07-08', 6000.00, 8),employees-# (107, 'Grace', 'Brown', 'grace.brown@company.com', '2014-11-02', 4900.00, 5),employees-# (108, 'Hank', 'Wilson', 'hank.wilson@company.com', '2013-02-17', 3100.00, 6),employees-# (109, 'Ivy', 'Clark', 'ivy.clark@company.com', '2021-08-30', 2700.00, 9),employees-# (110, 'Jake', 'White', 'jake.white@company.com', '2022-05-19', 3600.00, 7);ERROR:  relation "employees" does not existLINE 1: INSERT INTO employees (employee_id, first_name, last_name, e...                    ^employees=# INSERT INTO employee (employee_id, first_name, last_name, email, hire_date, salary,,department_id) VALUES(101, 'Alice', 'Johnson', 'alice.johnson@company.com', '2015-03-15', 4500.00, 1),(102, 'Bob', 'Smith', 'bob.smith@company.com', '2018-06-23', 5200.00, 3),(103, 'Carol', 'Adams', 'carol.adams@company.com', '2012-09-10', 6700.00, 2),(104, 'David', 'Lee', 'david.lee@company.com', '2020-01-05', 3800.00, 4),(105, 'Eve', 'Martins', 'eve.martins@company.com', '2019-12-11', 4000.00, 3),(106, 'Frank', 'Green', 'frank.green@company.com', '2017-07-08', 6000.00, 8),(107, 'Grace', 'Brown', 'grace.brown@company.com', '2014-11-02', 4900.00, 5),(108, 'Hank', 'Wilson', 'hank.wilson@company.com', '2013-02-17', 3100.00, 6),(109, 'Ivy', 'Clark', 'ivy.clark@company.com', '2021-08-30', 2700.00, 9),(110, 'Jake', 'White', 'jake.white@company.com', '2022-05-19', 3600.00, 7);INSERT 0 10employees=# INSERT INTO projects (project_id, project_name, start_date, end_date) VALUESemployees-# (201, 'HR Revamp', '2023-01-01', '2023-12-31'),employees-# (202, 'Finance Automation', '2022-05-15', '2023-04-30'),employees-# (203, 'IT Infrastructure Upgrade', '2024-01-01', NULL),employees-# (204, 'Marketing Blitz 2025', '2025-02-01', '2025-06-30'),employees-# (205, 'Legal Compliance', '2023-07-10', '2024-01-10'),employees-# (206, 'Customer Portal', '2021-11-01', '2022-10-31'),employees-# (207, 'Sales Booster', '2022-04-01', '2023-03-31'),employees-# (208, 'R&D Pilot', '2025-01-01', NULL),employees-# (209, 'Procurement Tracker', '2024-03-15', '2024-11-15'),employees-# (210, 'Operations Streamline', '2022-09-01', '2023-09-01');INSERT 0 10employees=# INSERT INTO employee_projects (employee_id, project_id, assigned_date) VALUESemployees-# (101, 201, '2023-01-10'),employees-# (102, 203, '2024-01-05'),employees-# (103, 202, '2022-05-20'),employees-# (104, 204, '2025-02-10'),employees-# (105, 203, '2024-01-07'),employees-# (106, 207, '2022-04-15'),employees-# (107, 205, '2023-07-15'),employees-# (108, 210, '2022-09-10'),employees-# (109, 208, '2025-01-10'),employees-# (110, 206, '2021-11-05');INSERT 0 10employees=# \d               List of relations Schema |       Name        | Type  |  Owner   --------+-------------------+-------+---------- public | departments       | table | postgres public | employee          | table | postgres public | employee_projects | table | postgres public | projects          | table | postgres(4 rows)employees=# select * from employee; employee_id | first_name | last_name |           email           | hire_date  | salary  | department_id -------------+------------+-----------+---------------------------+------------+---------+---------------         101 | Alice      | Johnson   | alice.johnson@company.com | 2015-03-15 | 4500.00 |             1         102 | Bob        | Smith     | bob.smith@company.com     | 2018-06-23 | 5200.00 |             3         103 | Carol      | Adams     | carol.adams@company.com   | 2012-09-10 | 6700.00 |             2         104 | David      | Lee       | david.lee@company.com     | 2020-01-05 | 3800.00 |             4         105 | Eve        | Martins   | eve.martins@company.com   | 2019-12-11 | 4000.00 |             3         106 | Frank      | Green     | frank.green@company.com   | 2017-07-08 | 6000.00 |             8         107 | Grace      | Brown     | grace.brown@company.com   | 2014-11-02 | 4900.00 |             5         108 | Hank       | Wilson    | hank.wilson@company.com   | 2013-02-17 | 3100.00 |             6         109 | Ivy        | Clark     | ivy.clark@company.com     | 2021-08-30 | 2700.00 |             9         110 | Jake       | White     | jake.white@company.com    | 2022-05-19 | 3600.00 |             7(10 rows)employees=# select * from departments; department_id |     department_name      ---------------+--------------------------             1 | Human Resources             2 | Finance             3 | Information Technology             4 | Marketing             5 | Legal             6 | Operations             7 | Customer Service             8 | Sales             9 | Research and Development            10 | Procurement(10 rows)employees=# select * from employee_projects; employee_id | project_id | assigned_date -------------+------------+---------------         101 |        201 | 2023-01-10         102 |        203 | 2024-01-05         103 |        202 | 2022-05-20         104 |        204 | 2025-02-10         105 |        203 | 2024-01-07         106 |        207 | 2022-04-15         107 |        205 | 2023-07-15         108 |        210 | 2022-09-10         109 |        208 | 2025-01-10         110 |        206 | 2021-11-05(10 rows)employees=# select * from projects; project_id |       project_name        | start_date |  end_date  ------------+---------------------------+------------+------------        201 | HR Revamp                 | 2023-01-01 | 2023-12-31        202 | Finance Automation        | 2022-05-15 | 2023-04-30        203 | IT Infrastructure Upgrade | 2024-01-01 |         204 | Marketing Blitz 2025      | 2025-02-01 | 2025-06-30        205 | Legal Compliance          | 2023-07-10 | 2024-01-10        206 | Customer Portal           | 2021-11-01 | 2022-10-31        207 | Sales Booster             | 2022-04-01 | 2023-03-31        208 | R&D Pilot                 | 2025-01-01 |         209 | Procurement Tracker       | 2024-03-15 | 2024-11-15        210 | Operations Streamline     | 2022-09-01 | 2023-09-01(10 rows)employees=# SELECT CONCAT(first_name, ' ', last_name, ' - 28975') AS full_name_with_id FROM employee;   full_name_with_id   ----------------------- Alice Johnson - 28928 Bob Smith - 28928 Carol Adams - 28928 David Lee - 28928 Eve Martins - 28928 Frank Green - 28928 Grace Brown - 28928 Hank Wilson - 28928 Ivy Clark - 28928 Jake White - 28928(10 rows)employees=# SELECT LOWER(CONCAT(first_name, ' ', last_name, ' -28928')) AS full_name_lower_with_id FROM employee; full_name_lower_with_id ------------------------- alice johnson -28928 bob smith -28928 carol adams -28928 david lee -28928 eve martins -28928 frank green -28928 grace brown -28928 hank wilson -28928 ivy clark -28928 jake white -28928(10 rows)employees=# SELECT CONCAT(SUBSTRING(first_name FROM 1 FOR 3), ' -28928') AS short_name_with_id FROM employee; short_name_with_id -------------------- Ali -28928 Bob -28928 Car -28928 Dav -28928 Eve -28928 Fra -28928 Gra -28928 Han -28928 Ivy -28928 Jak -28928(10 rows)employees=# SELECT CONCAT(REPLACE(email, '@company.com', '@org.com'), ' - 28928') AS updated_email_with_id FROM employee;     updated_email_with_id     ------------------------------- alice.johnson@org.com - 28928 bob.smith@org.com - 28928 carol.adams@org.com - 28928 david.lee@org.com - 28928 eve.martins@org.com - 28928 frank.green@org.com - 28928 grace.brown@org.com - 28928 hank.wilson@org.com - 28928 ivy.clark@org.com - 28928 jake.white@org.com - 28928(10 rows)employees=# SELECT CONCAT(TRIM('   Example String   '), ' - 28928') AS trimmed_string_with_id; trimmed_string_with_id ------------------------ Example String - 28928(1 row)employees=# SELECT CONCAT(LENGTH(CONCAT(first_name, ' ', last_name)), ' characters - 28928') AS name_length_with_id FROM employee;  name_length_with_id  ----------------------- 13 characters - 28928 9 characters - 28928 11 characters - 28928 9 characters - 28928 11 characters - 28928 11 characters - 28928 11 characters - 28928 11 characters - 28928 9 characters - 28928 10 characters - 28928(10 rows)employees=# SELECT CONCAT(POSITION('@' IN email), ' - 28928') AS at_position_with_id FROM employee; at_position_with_id --------------------- 14 - 28928 10 - 28928 12 - 28928 10 - 28928 12 - 28928 12 - 28928 12 - 28928 12 - 28928 10 - 28928 11 - 28928(10 rows)employees=# SELECT CONCAT(CASE WHEN gender = 'M' THEN 'Mr. WHEN gender = 'F' THEN 'Ms. 'ELSE ''END,first_name, ' ', last_name, ' - 28928'AS titled_name_with_id FROM employee;ERROR:  column "gender" does not existLINE 4:             WHEN gender = 'M' THEN 'Mr. '                         ^employees=# SELECT CONCAT(CASE WHEN first_name IN ('Bob', 'David', 'Frank', 'Hank', 'Jake') THEN 'Mr. ' WHEN first_name IN ('Alice', 'Carol', 'Eve', 'Grace', 'Ivy') THEN 'Ms. 'ELSE ''END,(first_name, ' ', last_name, ' - 28928') AS titled_name_with_id )FROM employee;    titled_name_with_id    --------------------------- Ms. Alice Johnson - 28928 Mr. Bob Smith - 28928 Ms. Carol Adams - 28928 Mr. David Lee - 28928 Ms. Eve Martins - 28928 Mr. Frank Green - 28928 Ms. Grace Brown - 28928 Mr. Hank Wilson - 28928 Ms. Ivy Clark - 28928 Mr. Jake White - 28928(10 rows)employees=# SELECT CONCAT(UPPER(project_name), ' - 28928') AS project_name_upper_with_id FROM projects;    project_name_upper_with_id     ----------------------------------- HR REVAMP - 28928 FINANCE AUTOMATION - 28928 IT INFRASTRUCTURE UPGRADE - 28928 MARKETING BLITZ 2025 - 28928 LEGAL COMPLIANCE - 28928 CUSTOMER PORTAL - 28928 SALES BOOSTER - 28928 R&D PILOT - 28928 PROCUREMENT TRACKER - 28928 OPERATIONS STREAMLINE - 28928(10 rows)employees=# SELECT CONCAT(REPLACE(project_name, '-', ''), ' - 28928') AS cleaned_project_name_with_id FROM projects;   cleaned_project_name_with_id    ----------------------------------- HR Revamp - 28928 Finance Automation - 28928 IT Infrastructure Upgrade - 28928 Marketing Blitz 2025 - 28928 Legal Compliance - 28928 Customer Portal - 28928 Sales Booster - 28928 R&D Pilot - 28928 Procurement Tracker - 28928 Operations Streamline - 28928(10 rows)employees=# SELECT CONCAT('Emp: ', first_name, ' ', last_name, ' (', department_name, ') - 28928') AS label_with_id FROM employee JOIN departments d ON e.department_id = d.department_id;                   label_with_id                   --------------------------------------------------- Emp: Alice Johnson (Human Resources) - 28928 Emp: Bob Smith (Information Technology) - 28928 Emp: Carol Adams (Finance) - 28928 Emp: David Lee (Marketing) - 28928 Emp: Eve Martins (Information Technology) - 28928 Emp: Frank Green (Sales) - 28928 Emp: Grace Brown (Legal) - 28928 Emp: Hank Wilson (Operations) - 28928 Emp: Ivy Clark (Research and Development) - 28928 Emp: Jake White (Customer Service) - 28928(10 rows)employees=# SELECT CONCAT(LENGTH(email), ' chars - 28928') AS email_length_with_id FROM employee; email_length_with_id ---------------------- 25 chars - 28928 21 chars - 28928 23 chars - 28928 21 chars - 28928 23 chars - 28928 23 chars - 28928 23 chars - 28928 23 chars - 28928 21 chars - 28928 22 chars - 28928(10 rows)employees=# SELECT CONCAT(SPLIT_PART(SPLIT_PART(email, '@', 1), '.', 2), ' - 28928') AS last_name_from_email_with_id FROM employee; last_name_from_email_with_id ------------------------------ johnson - 28928 smith - 28928 adams - 28928 lee - 28928 martins - 28928 green - 28928 brown - 28928 wilson - 28928 clark - 28928 white - 28928(10 rows)employees=# SELECT CONCAT(UPPER(last_name), ', ', INITCAP(first_name), ' - 28928') AS formatted_name_with_id FROM employee; formatted_name_with_id ------------------------ JOHNSON, Alice - 28928 SMITH, Bob - 28928 ADAMS, Carol - 28928 LEE, David - 28928 MARTINS, Eve - 28928 GREEN, Frank - 28928 BROWN, Grace - 28928 WILSON, Hank - 28928 CLARK, Ivy - 28928 WHITE, Jake - 28928(10 rows)employees=# SELECT CONCAT(first_name, ' ', last_name, CASE WHEN p.end_date IS NULL OR p.end_date > CURRENT_DATE THEN ' (Active) ELSE ''END, ' - 28928') AS status_name_with_id FROM employee e LEFT JOIN employee_projects ep ON e.employee_id = ep.employee_id LEFT JOIN projects p ON ep.project_id = p.project_id;     status_name_with_id      ------------------------------ Alice Johnson - 28928 Bob Smith (Active) - 289728 Carol Adams - 28928 David Lee - 28928 Eve Martins (Active) - 28928 Frank Green - 28928 Grace Brown - 28928 Hank Wilson - 28928 Ivy Clark (Active) - 28928 Jake White - 28928(10 rows)employees=# SELECT employee_id, salary, ROUND(salary) AS rounded_salary, '- 28928' AS student_id FROM employee; employee_id | salary  | rounded_salary | student_id -------------+---------+----------------+------------         101 | 4500.00 |           4500 | - 28928         102 | 5200.00 |           5200 | - 28928         103 | 6700.00 |           6700 | - 28928         104 | 3800.00 |           3800 | - 28928         105 | 4000.00 |           4000 | - 28928         106 | 6000.00 |           6000 | - 28928         107 | 4900.00 |           4900 | - 28928         108 | 3100.00 |           3100 | - 28928         109 | 2700.00 |           2700 | - 28928         110 | 3600.00 |           3600 | - 28928(10 rows)employees=# SELECT employee_id, salary, '28928' AS student_id FROM employee WHERE MOD(CAST(salary AS INT), 2) = 0; employee_id | salary  | student_id -------------+---------+------------         101 | 4500.00 | 28928         102 | 5200.00 | 28928         103 | 6700.00 | 28928         104 | 3800.00 | 28928         105 | 4000.00 | 28928         106 | 6000.00 | 28928         107 | 4900.00 | 28928         108 | 3100.00 | 28928         109 | 2700.00 | 28928         110 | 3600.00 | 28928(10 rows)employees=# SELECT project_id, project_name, end_date, start_date, end_date - start_date AS duration_days,'28928' AS student_id FROM projects WHERE end_date IS NOT NULL; project_id |     project_name      |  end_date  | start_date | duration_days | student_id ------------+-----------------------+------------+------------+---------------+------------        201 | HR Revamp             | 2023-12-31 | 2023-01-01 |           364 | 28928        202 | Finance Automation    | 2023-04-30 | 2022-05-15 |           350 | 28928        204 | Marketing Blitz 2025  | 2025-06-30 | 2025-02-01 |           149 | 28928        205 | Legal Compliance      | 2024-01-10 | 2023-07-10 |           184 | 28928        206 | Customer Portal       | 2022-10-31 | 2021-11-01 |           364 | 28928        207 | Sales Booster         | 2023-03-31 | 2022-04-01 |           364 | 28928        209 | Procurement Tracker   | 2024-11-15 | 2024-03-15 |           245 | 28928        210 | Operations Streamline | 2023-09-01 | 2022-09-01 |           365 | 28928(8 rows)employees=# SELECT  ABS(e1.salary - e2.salary) AS salary_difference,'28928' AS student_id FROM employee e1 JOIN employee e2 ON e1.employee_id = 101 AND e2.employee_id = 103; salary_difference | student_id -------------------+------------           2200.00 | 28928(1 row)employees=# SELECT employee_id, salary,salary * POWER(1.10, 1) AS raised_salary,'28928' AS student_id FROM employee; employee_id | salary  |      raised_salary      | student_id -------------+---------+-------------------------+------------         101 | 4500.00 | 4950.000000000000000000 | 28928         102 | 5200.00 | 5720.000000000000000000 | 28928         103 | 6700.00 | 7370.000000000000000000 | 28928         104 | 3800.00 | 4180.000000000000000000 | 28928         105 | 4000.00 | 4400.000000000000000000 | 28928         106 | 6000.00 | 6600.000000000000000000 | 28928         107 | 4900.00 | 5390.000000000000000000 | 28928         108 | 3100.00 | 3410.000000000000000000 | 28928         109 | 2700.00 | 2970.000000000000000000 | 28928         110 | 3600.00 | 3960.000000000000000000 | 28928(10 rows)employees=# SELECT employee_id, ROUND(RANDOM() * 10000) AS random_test_id,'28928' AS student_id FROM employee; employee_id | random_test_id | student_id -------------+----------------+------------         101 |           5031 | 28928         102 |           8934 | 28928         103 |           2583 | 28928         104 |           1527 | 28928         105 |           5844 | 28928         106 |           4315 | 28928         107 |           3009 | 28928         108 |           8775 | 28928         109 |           5921 | 28928         110 |           4979 | 28928(10 rows)employees=# SELECT employee_id, salary,  CEIL(salary) AS ceiling_salary, FLOOR(salary) AS floor_salary,'28928' AS student_id FROM employee; employee_id | salary  | ceiling_salary | floor_salary | student_id -------------+---------+----------------+--------------+------------         101 | 4500.00 |           4500 |         4500 | 28928         102 | 5200.00 |           5200 |         5200 | 28928         103 | 6700.00 |           6700 |         6700 | 28928         104 | 3800.00 |           3800 |         3800 | 28928         105 | 4000.00 |           4000 |         4000 | 28928         106 | 6000.00 |           6000 |         6000 | 28928         107 | 4900.00 |           4900 |         4900 | 28928         108 | 3100.00 |           3100 |         3100 | 28928         109 | 2700.00 |           2700 |         2700 | 28928         110 | 3600.00 |           3600 |         3600 | 28928(10 rows)employees=# SELECT employee_id, LENGTH('0785210809') AS phone_length,  -- replace with phone_number if exists'28928' AS student_id FROM employee; employee_id | phone_length | student_id -------------+--------------+------------         101 |           10 | 28928         102 |           10 | 28928         103 |           10 | 28928         104 |           10 | 28928         105 |           10 | 28928         106 |           10 | 28928         107 |           10 | 28928         108 |           10 | 28928         109 |           10 | 28928         110 |           10 | 28928(10 rows)employees=# SELECT employee_id, salary,CASE WHEN salary >= 5000THEN 'High' WHEN salary >= 3000 THEN 'Medium' ELSE 'Low' END AS salary_category, '28928' AS student_id FROM employee;ERROR:  trailing junk after numeric literal at or near "5000THEN"LINE 3:         WHEN salary >= 5000THEN 'High'                               ^employees=# SELECT employee_id, salary,CASE WHEN salary >= 5000 THEN 'High' WHEN salary >= 3000 THEN 'Medium' ELSE 'Low'END AS salary_category,'28928' AS student_id FROM employee; employee_id | salary  | salary_category | student_id -------------+---------+-----------------+------------         101 | 4500.00 | Medium          | 28928         102 | 5200.00 | High            | 28928         103 | 6700.00 | High            | 28928         104 | 3800.00 | Medium          | 28928         105 | 4000.00 | Medium          | 28928         106 | 6000.00 | High            | 28928         107 | 4900.00 | Medium          | 28928         108 | 3100.00 | Medium          | 28928         109 | 2700.00 | Low             | 28928         110 | 3600.00 | Medium          | 28928(10 rows)employees=# SELECT employee_id, salary,LENGTH(REPLACE(CAST(salary AS TEXT), '.', '')) AS digit_count,'28928' AS student_id FROM employee; employee_id | salary  | digit_count | student_id -------------+---------+-------------+------------         101 | 4500.00 |           6 | 28928         102 | 5200.00 |           6 | 28928         103 | 6700.00 |           6 | 28928         104 | 3800.00 |           6 | 28928         105 | 4000.00 |           6 | 28928         106 | 6000.00 |           6 | 28928         107 | 4900.00 |           6 | 28928         108 | 3100.00 |           6 | 28928         109 | 2700.00 |           6 | 28928         110 | 3600.00 |           6 | 28928(10 rows)employees=# SELECT CURRENT_DATE AS today_date, '- 28928' AS student_id; today_date | student_id ------------+------------ 2025-08-03 | - 28928(1 row)employees=# SELECT CURRENT_DATE AS today_date, '28975' AS student_id; today_date | student_id ------------+------------ 2025-08-03 | 28928(1 row)employees=# SELECT employee_id, hire_date, CURRENT_DATE - hire_date AS days_worked,'289728' AS student_id FROM employee; employee_id | hire_date  | days_worked | student_id -------------+------------+-------------+------------         101 | 2015-03-15 |        3794 | 28928         102 | 2018-06-23 |        2598 | 28928         103 | 2012-09-10 |        4710 | 28928         104 | 2020-01-05 |        2037 | 28928         105 | 2019-12-11 |        2062 | 28928         106 | 2017-07-08 |        2948 | 28928         107 | 2014-11-02 |        3927 | 28928         108 | 2013-02-17 |        4550 | 28928         109 | 2021-08-30 |        1434 | 28928         110 | 2022-05-19 |        1172 | 28928(10 rows)employees=# SELECT employee_id, first_name, hire_date, '28928' AS student_id FROM employee WHERE EXTRACT(YEAR FROM hire_date) = EXTRACT(YEAR FROM CURRENT_DATE); employee_id | first_name | hire_date | student_id -------------+------------+-----------+------------(0 rows)employees=# SELECT NOW() AS current_datetime, '28928' AS student_id;       current_datetime        | student_id -------------------------------+------------ 2025-08-03 20:29:11.611788+02 | 28928(1 row)employees=# SELECT employee_id,EXTRACT(YEAR FROM hire_date) AS hire_year,EXTRACT(MONTH FROM hire_date) AS hire_month,EXTRACT(DAY FROM hire_date) AS hire_day,'28928' AS student_id FROM employee; employee_id | hire_year | hire_month | hire_day | student_id -------------+-----------+------------+----------+------------         101 |      2015 |          3 |       15 | 28928         102 |      2018 |          6 |       23 | 28928         103 |      2012 |          9 |       10 | 28928         104 |      2020 |          1 |        5 | 28928         105 |      2019 |         12 |       11 | 28928         106 |      2017 |          7 |        8 | 28928         107 |      2014 |         11 |        2 | 28928         108 |      2013 |          2 |       17 | 28928         109 |      2021 |          8 |       30 | 28928         110 |      2022 |          5 |       19 | 28928(10 rows)employees=# SELECT employee_id, first_name, hire_date, '28928' AS student_id FROM employee WHERE hire_date < '2020-01-01'; employee_id | first_name | hire_date  | student_id -------------+------------+------------+------------         101 | Alice      | 2015-03-15 | 28928         102 | Bob        | 2018-06-23 | 28928         103 | Carol      | 2012-09-10 | 28928         105 | Eve        | 2019-12-11 | 28928         106 | Frank      | 2017-07-08 | 28928         107 | Grace      | 2014-11-02 | 28928         108 | Hank       | 2013-02-17 | 28928(7 rows)employees=# SELECT project_id, project_name, end_date, '28928' AS student_id FROM projects WHERE end_date IS NOT NULL AND end_date >= CURRENT_DATE - INTERVAL '30 days'; project_id | project_name | end_date | student_id ------------+--------------+----------+------------(0 rows)employees=# SELECT project_id, end_date - start_date AS total_days, '28928' AS student_id FROM projects WHERE end_date IS NOT NULL; project_id | total_days | student_id ------------+------------+------------        201 |        364 | 28928        202 |        350 | 28928        204 |        149 | 28928        205 |        184 | 28928        206 |        364 | 28928        207 |        364 | 28928        209 |        245 | 28928        210 |        365 | 28928(8 rows)employees=# SELECT TO_CHAR(DATE '2025-07-23', 'Month DD, YYYY') AS formatted_date,'28928' AS student_id;   formatted_date   | student_id --------------------+------------ July      23, 2025 | 28928(1 row)employees=# SELECT project_id, project_name, CASE  WHEN end_date IS NULL THEN 'Ongoing' ELSE TO_CHAR(end_date, 'YYYY-MM-DD') END AS project_status,'28928' AS student_id FROM projects; project_id |       project_name        | project_status | student_id ------------+---------------------------+----------------+------------        201 | HR Revamp                 | 2023-12-31     | 28928        202 | Finance Automation        | 2023-04-30     | 28928        203 | IT Infrastructure Upgrade | Ongoing        | 28928        204 | Marketing Blitz 2025      | 2025-06-30     | 28928        205 | Legal Compliance          | 2024-01-10     | 28928        206 | Customer Portal           | 2022-10-31     | 28928        207 | Sales Booster             | 2023-03-31     | 28928        208 | R&D Pilot                 | Ongoing        | 28928        209 | Procurement Tracker       | 2024-11-15     | 28928        210 | Operations Streamline     | 2023-09-01     | 28928(10 rows)employees=# SELECT employee_id, salary, CASE WHEN salary >= 5000 THEN 'High' WHEN salary >= 3000 THEN 'Medium' ELSE 'Low'END AS salary_level,'28975' AS student_id FROM employee; employee_id | salary  | salary_level | student_id -------------+---------+--------------+------------         101 | 4500.00 | Medium       | 28928         102 | 5200.00 | High         | 28928         103 | 6700.00 | High         | 28928         104 | 3800.00 | Medium       | 28928         105 | 4000.00 | Medium       | 28928         106 | 6000.00 | High         | 28928         107 | 4900.00 | Medium       | 28928         108 | 3100.00 | Medium       | 28928         109 | 2700.00 | Low          | 28928         110 | 3600.00 | Medium       | 28928(10 rows)employees=# SELECT employee_id, COALESCE(email, 'No Email') AS safe_email, '28975' AS student_id FROM employee; employee_id |        safe_email         | student_id -------------+---------------------------+------------         101 | alice.johnson@company.com | 28928         102 | bob.smith@company.com     | 28928         103 | carol.adams@company.com   | 28928         104 | david.lee@company.com     | 28928         105 | eve.martins@company.com   | 28928         106 | frank.green@company.com   | 28928         107 | grace.brown@company.com   | 28928         108 | hank.wilson@company.com   | 28928         109 | ivy.clark@company.com     | 28928         110 | jake.white@company.com    | 28928(10 rows)employees=# SELECT employee_id, hire_date,CASE WHEN hire_date < '2015-01-01' THEN 'Veteran' ELSE 'New Hire' END AS status,'28928' AS student_id FROM employee; employee_id | hire_date  |  status  | student_id -------------+------------+----------+------------         101 | 2015-03-15 | New Hire | 28928         102 | 2018-06-23 | New Hire | 28928         103 | 2012-09-10 | Veteran  | 28928         104 | 2020-01-05 | New Hire | 28928         105 | 2019-12-11 | New Hire | 28928         106 | 2017-07-08 | New Hire | 28928         107 | 2014-11-02 | Veteran  | 28928         108 | 2013-02-17 | Veteran  | 28928         109 | 2021-08-30 | New Hire | 28928         110 | 2022-05-19 | New Hire | 28928(10 rows)employees=# SELECT employee_id, COALESCE(salary, 3000) AS salary_defaulted, '28928' AS student_id FROM employee; employee_id | salary_defaulted | student_id -------------+------------------+------------         101 |          4500.00 | 28928         102 |          5200.00 | 28928         103 |          6700.00 | 28928         104 |          3800.00 | 28928         105 |          4000.00 | 28928         106 |          6000.00 | 28928         107 |          4900.00 | 28928         108 |          3100.00 | 28928         109 |          2700.00 | 28928         110 |          3600.00 | 28928(10 rows)employees=# SELECT employee_id, department_id,CASE  WHEN department_id = 1 THEN 'HR' WHEN department_id = 3 THEN 'IT' ELSE 'Other' END AS dept_category, '28928' AS student_id FROM employee; employee_id | department_id | dept_category | student_id -------------+---------------+---------------+------------         101 |             1 | HR            | 28928         102 |             3 | IT            | 28928         103 |             2 | Other         | 28928         104 |             4 | Other         | 28928         105 |             3 | IT            | 28928         106 |             8 | Other         | 28928         107 |             5 | Other         | 28928         108 |             6 | Other         | 28928         109 |             9 | Other         | 28928         110 |             7 | Other         | 28928(10 rows)employees=# SELECT e.employee_id,CASE WHEN ep.project_id IS NULL THEN 'Unassigned' ELSE 'Assigned' END AS project_status, '28928' AS student_id FROM employee e LEFT JOIN employee_projects ep ON e.employee_id = ep.employee_id; employee_id | project_status | student_id -------------+----------------+------------         101 | Assigned       | 28928         102 | Assigned       | 28928         103 | Assigned       | 28928         104 | Assigned       | 28928         105 | Assigned       | 28928         106 | Assigned       | 28928         107 | Assigned       | 28928         108 | Assigned       | 28928         109 | Assigned       | 28928         110 | Assigned       | 28928(10 rows)employees=# SELECT employee_id, salary,CASE WHEN salary > 5000 THEN '30% Tax' WHEN salary > 3000 THEN '20% Tax' ELSE '10% Tax' END AS tax_band, '28928' AS student_id FROM employee; employee_id | salary  | tax_band | student_id -------------+---------+----------+------------         101 | 4500.00 | 20% Tax  | 28928         102 | 5200.00 | 30% Tax  | 28928         103 | 6700.00 | 30% Tax  | 28928         104 | 3800.00 | 20% Tax  | 28928         105 | 4000.00 | 20% Tax  | 28928         106 | 6000.00 | 30% Tax  | 28928         107 | 4900.00 | 20% Tax  | 28928         108 | 3100.00 | 20% Tax  | 28928         109 | 2700.00 | 10% Tax  | 28928         110 | 3600.00 | 20% Tax  | 28928(10 rows)employees=# SELECT project_id,CASE WHEN end_date IS NULL THEN 'Ongoing' WHEN end_date - start_date > 365 THEN 'Long Term' ELSE 'Short Term' END AS project_type,'28928' AS student_id FROM projects; project_id | project_type | student_id ------------+--------------+------------        201 | Short Term   | 28928        202 | Short Term   | 28928        203 | Ongoing      | 28928        204 | Short Term   | 28928        205 | Short Term   | 28928        206 | Short Term   | 28928        207 | Short Term   | 28928        208 | Ongoing      | 28928        209 | Short Term   | 28928        210 | Short Term   | 28928(10 rows)employees=# SELECT employee_id, salary,CASE WHEN MOD(CAST(salary AS INT), 2) = 0 THEN 'Even' ELSE 'Odd'END AS salary_parity,'28928' AS student_id FROM employee; employee_id | salary  | salary_parity | student_id -------------+---------+---------------+------------         101 | 4500.00 | Even          | 28928         102 | 5200.00 | Even          | 28928         103 | 6700.00 | Even          | 28928         104 | 3800.00 | Even          | 28928         105 | 4000.00 | Even          | 28928         106 | 6000.00 | Even          | 28928         107 | 4900.00 | Even          | 28928         108 | 3100.00 | Even          | 28928         109 | 2700.00 | Even          | 28928         110 | 3600.00 | Even          | 28928(10 rows)employees=# SELECT employee_id, CONCAT(COALESCE(first_name, 'NoFirst'), ' ', COALESCE(last_name, 'NoLast')) AS full_name,'28928' AS student_id FROM employee; employee_id |   full_name   | student_id -------------+---------------+------------         101 | Alice Johnson | 28928         102 | Bob Smith     | 28928         103 | Carol Adams   | 28928         104 | David Lee     | 28928         105 | Eve Martins   | 28928         106 | Frank Green   | 28928         107 | Grace Brown   | 28928         108 | Hank Wilson   | 28928         109 | Ivy Clark     | 28928         110 | Jake White    | 28928(10 rows)employees=# SELECT employee_id,CONCAT(first_name, ' ', last_name) AS full_name, CASE WHEN LENGTH(CONCAT(first_name, last_name)) > 10 THEN 'Long Name' ELSE 'Short Name' END AS name_length_type, '28928' AS student_id FROM employee; employee_id |   full_name   | name_length_type | student_id -------------+---------------+------------------+------------         101 | Alice Johnson | Long Name        | 28928         102 | Bob Smith     | Short Name       | 28928         103 | Carol Adams   | Short Name       | 28928         104 | David Lee     | Short Name       | 28928         105 | Eve Martins   | Short Name       | 28928         106 | Frank Green   | Short Name       | 28928         107 | Grace Brown   | Short Name       | 28928         108 | Hank Wilson   | Short Name       | 28928         109 | Ivy Clark     | Short Name       | 28928         110 | Jake White    | Short Name       | 28928(10 rows)employees=# SELECT employee_id, email,CASE WHEN UPPER(email) LIKE '%TEST%' THEN 'Dummy Account' ELSE 'Active Account' END AS email_status,'28928' AS student_id FROM employee; employee_id |           email           |  email_status  | student_id -------------+---------------------------+----------------+------------         101 | alice.johnson@company.com | Active Account | 28928         102 | bob.smith@company.com     | Active Account | 28928         103 | carol.adams@company.com   | Active Account | 28928         104 | david.lee@company.com     | Active Account | 28928         105 | eve.martins@company.com   | Active Account | 28928         106 | frank.green@company.com   | Active Account | 28928         107 | grace.brown@company.com   | Active Account | 28928         108 | hank.wilson@company.com   | Active Account | 28928         109 | ivy.clark@company.com     | Active Account | 28928         110 | jake.white@company.com    | Active Account | 28928(10 rows)employees=# SELECT employee_id, hire_date,CASE WHEN EXTRACT(YEAR FROM hire_date) <= 2015 THEN 'Senior' WHEN EXTRACT(YEAR FROM hire_date) BETWEEN 2016 AND 2020 THEN 'Mid-Level' ELSE 'Junior' END AS seniority,'28928' AS student_id FROM employee; employee_id | hire_date  | seniority | student_id -------------+------------+-----------+------------         101 | 2015-03-15 | Senior    | 28928         102 | 2018-06-23 | Mid-Level | 28928         103 | 2012-09-10 | Senior    | 28928         104 | 2020-01-05 | Mid-Level | 28928         105 | 2019-12-11 | Mid-Level | 28928         106 | 2017-07-08 | Mid-Level | 28928         107 | 2014-11-02 | Senior    | 28928         108 | 2013-02-17 | Senior    | 28928         109 | 2021-08-30 | Junior    | 28928         110 | 2022-05-19 | Junior    | 28928(10 rows)employees=# SELECT employee_id, salary, CASE WHEN salary < 3000 THEN 'Increase by 15%' WHEN salary < 5000 THEN 'Increase by 10%' ELSE 'Increase by 5%' END AS increment_plan, '28928' AS student_id FROM employee; employee_id | salary  | increment_plan  | student_id -------------+---------+-----------------+------------         101 | 4500.00 | Increase by 10% | 28928         102 | 5200.00 | Increase by 5%  | 28928         103 | 6700.00 | Increase by 5%  | 28928         104 | 3800.00 | Increase by 10% | 28928         105 | 4000.00 | Increase by 10% | 28928         106 | 6000.00 | Increase by 5%  | 28928         107 | 4900.00 | Increase by 10% | 28928         108 | 3100.00 | Increase by 10% | 28928         109 | 2700.00 | Increase by 15% | 28928         110 | 3600.00 | Increase by 10% | 28928(10 rows)employees=# SELECT employee_id, hire_date,CASE WHEN EXTRACT(MONTH FROM hire_date) = EXTRACT(MONTH FROM CURRENT_DATE) THEN 'Anniversary Month' ELSE 'Not Anniversary Month' END AS anniversary_check, '28928' AS student_id FROM employee; employee_id | hire_date  |   anniversary_check   | student_id -------------+------------+-----------------------+------------         101 | 2015-03-15 | Not Anniversary Month | 28928         102 | 2018-06-23 | Not Anniversary Month | 28928         103 | 2012-09-10 | Not Anniversary Month | 28928         104 | 2020-01-05 | Not Anniversary Month | 28928         105 | 2019-12-11 | Not Anniversary Month | 28928         106 | 2017-07-08 | Not Anniversary Month | 28928         107 | 2014-11-02 | Not Anniversary Month | 28928         108 | 2013-02-17 | Not Anniversary Month | 28928         109 | 2021-08-30 | Anniversary Month     | 28928         110 | 2022-05-19 | Not Anniversary Month | 28928(10 rows)employees=# 